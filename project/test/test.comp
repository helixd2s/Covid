#version 460 core

// 
#extension GL_EXT_scalar_block_layout : require
#extension GL_EXT_shader_explicit_arithmetic_types_int32 : require
#extension GL_EXT_shader_explicit_arithmetic_types_int64 : require
#extension GL_EXT_buffer_reference : require
#extension GL_EXT_buffer_reference2 : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_samplerless_texture_functions : require

//
layout (local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

// 
layout(set = 0, binding = 0, scalar, row_major) uniform MatrixBlock
{
  uint32_t imageIndices[4];
  uint32_t textureIndices[4];
  uint32_t currentImage;
  uint32_t reserved;
};

//
layout(set = 1, binding = 0) uniform texture2D textures[];
layout(set = 2, binding = 0) uniform sampler samplers[];
layout(set = 3, binding = 0, rgba32f) uniform image2D images[];

// 
void main() {
  imageStore(images[imageIndices[currentImage]], ivec2(gl_GlobalInvocationID.xy), texelFetch(textures[textureIndices[0]], ivec2(gl_GlobalInvocationID.xy), 0));
  //imageStore(images[imageIndices[currentImage]], ivec2(gl_GlobalInvocationID.xy), vec4(vec2(gl_GlobalInvocationID.xy)/vec2(1280.f,720.f), 0.f, 1.f));
};
