#version 460 core

// 
#extension GL_GOOGLE_include_directive : require

//
#include "lib/native.glsl"
#include "lib/fresnel.glsl"
#include "lib/random.glsl"
#include "lib/rasterizer.glsl"
#include "lib/reprojection.glsl"

//
layout (local_size_x = 32, local_size_y = 12, local_size_z = 1) in;

// 
void main() {
  const uvec2 gcoord = gl_GlobalInvocationID.xy;
  const vec2 tCoord = (vec2(gcoord) + 0.5f)/vec2(UR(deferredBuf.extent));
  const uint linearId = gcoord.x + UR(deferredBuf.extent).x * gcoord.y;
  const uint type = linearId / (UR(deferredBuf.extent).x * UR(deferredBuf.extent).y);
  const uint pixelId = linearId % (UR(deferredBuf.extent).x * UR(deferredBuf.extent).y);

  //
  PixelSurfaceInfoRef surface = getPixelSurface(pixelId);
  if (type < 3) { reproject3D(pixelId, type); };
};
